apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  storageClassName: standard
  accessModes:
    - ReadWriteOnce # We are on minikube
  hostPath:
    path: "/mnt/data"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc
spec:
  volumeName: pv
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend-app
  ports:
    - protocol: "TCP"
      port: 3000
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend-app
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blog-env
data:
  target-host: ""
  welcome-message: "Hello from inside kubernetes"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
        - name: frontend
          image: anistigrini/blogfrontend:latest
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 500m
          env:
            - name: REACT_APP_TARGET_HOST
              valueFrom:
                configMapKeyRef:
                  name: blog-env
                  key: target-host
            - name: REACT_APP_WELCOME_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: blog-env
                  key: welcome-message
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              httpHeaders:
                - name: Custom-Header
                  value: Test
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
        - name: blogbackend
          image: anistigrini/blogbackend:latest
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          livenessProbe:
            httpGet:
              path: /api/posts
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          volumeMounts:
            - name: pvc
              mountPath: blogbackend/data
              subPath: data
      volumes:
        - name: pvc
          persistentVolumeClaim:
            claimName: pvc
